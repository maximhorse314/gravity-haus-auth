swagger: '2.0'
info:
  title: Gravity Haus Auth Api Documentation
  version: 1.0.0
host: 57kiuv9e1j.execute-api.us-east-2.amazonaws.com
basePath: /Prod
schemes:
  - https
paths:
  /stripe-coupon:
    get:
      summary: Get a Stripe coupon
      description: Retrieves a Stripe coupon using its ID
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Coupon not found
      parameters:
        - name: coupon
          in: query
          description: The ID of the Stripe coupon to retrieve
          required: true
          type: string
  /stripe-plan-version:
    get:
      summary: Get the latest Stripe Plan Version
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: ID of the Stripe Plan Version to retrieve
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              stripePlanVersion:
                type: object
                properties:
                  id:
                    type: integer
                  active:
                    type: boolean
                  stripePlanId:
                    type: integer
                  stripePlans:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      currency:
                        type: string
                      interval:
                        type: string
                      amount:
                        type: integer
                      trialPeriodDays:
                        type: integer
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                required:
                  - id
                  - active
                  - stripePlanId
                  - stripePlans
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'
  /usage-summary:
    get:
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: JWT authorization token in the format "Bearer <token>"
        - name: id
          in: query
          description: The ID of the User
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  rentalBookings:
                    type: array
                    items:
                      type: object
                  gymBookings:
                    type: array
                    items:
                      type: object
                  events:
                    type: array
                    items:
                      type: object
                  eventBookings:
                    type: array
                    items:
                      type: object
                  hausReservations:
                    type: array
                    items:
                      type: object
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
  /add-family-member:
    post:
      summary: Add a family member to an account
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: JWT authorization token in the format "Bearer <token>"
        - in: body
          name: body
          description: Member details
          required: true
          schema:
            type: object
            properties:
              accountId:
                type: number
                description: Account ID
              firstName:
                type: string
                description: First name of the family member
              lastName:
                type: string
                description: Last name of the family member
              dateOfBirth:
                type: string
                format: date
                description: Date of birth of the family member (YYYY-MM-DD)
              email:
                type: string
                format: email
                description: Email address of the family member
              phoneNumber:
                type: string
                description: Phone number of the family member
                pattern: ^[0-9]{10}$
      responses:
        '200':
          description: Family member added successfully
          schema:
            type: object
            properties:
              user:
                type: object
                description: User object of the added family member
        '400':
          description: Invalid input or family member already exists
        '401':
          description: Unauthorized
        '404':
          description: Account not found
        '500':
          description: Internal server error
  /change-membership:
    post:
      security:
        - jwt: []
      tags:
        - Membership
      summary: Change a membership plan
      description: This endpoint allows an account owner to change their membership plan.
      parameters:
        - name: body
          in: body
          description: >-
            JSON object containing the required parameters to update the
            membership plan
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: The email of the account owner
                default: test@test.com
              planId:
                type: string
                description: The new membership plan ID
              c1:
                type: boolean
                description: Optional string used to identify the coupon code used
                default: false
              coupon:
                type: string
                description: Optional coupon code to apply to the subscription
                default: test
              userId:
                type: string
                description: The user ID of the account owner
      responses:
        '200':
          description: Success. The account holder User object is returned.
          schema:
            type: object
            properties:
              accountHolder:
                type: object
                description: The updated account holder object
        '400':
          description: Bad request. Only the account owner can change a membership.
        '401':
          description: Unauthorized. JWT token is missing or invalid.
        '404':
          description: Invalid coupon. The coupon code is invalid or expired.
        '500':
          description: >-
            Internal server error. An unexpected error occurred while processing
            the request.
  /create-account:
    post:
      summary: Creates a new account
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
        - in: body
          name: body
          description: Account details to be created
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              dateOfBirth:
                type: string
              phoneNumber:
                type: string
              phoneNumberCountryCode:
                type: string
              address1:
                type: string
              postalCode:
                type: string
              city:
                type: string
              state:
                type: string
              familyMembers:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
              stripeToken:
                type: string
              stripePlanId:
                type: string
              coupon:
                type: string
              referralName:
                type: string
              c1:
                type: string
      responses:
        '200':
          description: Account created successfully
          schema:
            type: object
            properties:
              userId:
                type: string
        '400':
          description: Bad request - invalid input
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: Unauthorized - missing or invalid JWT token
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /login:
    post:
      summary: Login user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Successful login
          schema:
            type: object
            properties:
              token:
                type: string
        '401':
          description: Invalid login credentials
          schema:
            type: object
            properties:
              message:
                type: string
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /remove-family-member:
    post:
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: RemoveFamilyMemberRequest
          description: Request payload for removing a family member
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
              accountId:
                type: string
      responses:
        '200':
          description: Success response
        '400':
          description: Missing Required Parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /upsert-account:
    post:
      summary: Upsert account details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Account details to upsert
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
                example: '123456'
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Doe
              dateOfBirth:
                type: string
                example: '2000-01-01'
              handle:
                type: string
                example: johndoe
              verified:
                type: boolean
                example: true
              preferredLocation:
                type: string
                example: New York, NY
              preferredIntensity:
                type: string
                example: High
      responses:
        '200':
          description: Account upserted successfully
          schema:
            type: object
            properties:
              account:
                type: object
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - Bearer: []
  /upsert-address:
    post:
      summary: Upsert a user's address
      description: Upserts a user's address in the database
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
                description: The ID of the user whose address is being updated
              address1:
                type: string
                description: The first line of the user's address
              address2:
                type: string
                description: The second line of the user's address
              address3:
                type: string
                description: The third line of the user's address
              address4:
                type: string
                description: The fourth line of the user's address
              city:
                type: string
                description: The city of the user's address
              county:
                type: string
                description: The county of the user's address
              state:
                type: string
                description: The state of the user's address
              postalCode:
                type: string
                description: The postal code of the user's address
              country:
                type: string
                description: The country of the user's address
            required:
              - id
              - address1
              - city
              - state
              - postalCode
              - country
      responses:
        '200':
          description: Address successfully upserted
          schema:
            type: object
            properties:
              address:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the user's address
                  address1:
                    type: string
                    description: The first line of the user's address
                  address2:
                    type: string
                    description: The second line of the user's address
                  address3:
                    type: string
                    description: The third line of the user's address
                  address4:
                    type: string
                    description: The fourth line of the user's address
                  city:
                    type: string
                    description: The city of the user's address
                  county:
                    type: string
                    description: The county of the user's address
                  state:
                    type: string
                    description: The state of the user's address
                  postalCode:
                    type: string
                    description: The postal code of the user's address
                  country:
                    type: string
                    description: The country of the user's address
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /upsert-phone:
    post:
      summary: Upsert Phone
      description: Adds or updates a phone number for a user.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: The request body contains the user's phone number and ID.
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
                description: >-
                  The ID of the user whose phone number is being updated or
                  created.
              phoneNumber:
                type: string
                description: The user's phone number.
              countryCode:
                type: integer
                description: The country code for the user's phone number (default is 1).
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      security:
        - Bearer: []
  /upsert-user:
    post:
      summary: Create or update a user
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: JWT token for user authentication
        - in: body
          name: body
          description: User data to create or update
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID
              email:
                type: string
                description: User email
              password:
                type: string
                description: User password
              roleId:
                type: integer
                description: User role ID
              lastActivityDate:
                type: string
                format: date-time
                description: User last activity date
            required:
              - id
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  uuid:
                    type: string
                    description: User UUID
                  email:
                    type: string
                    description: User email
                  password:
                    type: string
                    description: User password (masked with asterisks)
                  roleId:
                    type: integer
                    description: User role ID
                  lastActivityDate:
                    type: string
                    format: date-time
                    description: User last activity date
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  email:
                    type: string
                    description: User email
                  password:
                    type: string
                    description: User password
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: object
                description: Error object
responses:
  Unauthorized:
    description: Unauthorized
  InternalServerError:
    description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Use JWT token starting with Bearer, e.g. Bearer XXXXXXX
  jwt:
    type: apiKey
    name: Authorization
    in: header
  JWTAuth:
    type: apiKey
    name: Authorization
    in: header
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Use a bearer token to authenticate
produces:
  - application/json
consumes:
  - application/json
